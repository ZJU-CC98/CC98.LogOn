@using Microsoft.EntityFrameworkCore
@model AppScope
@inject CC98IdentityDbContext DbContext
@{
	var isEditMode = (bool)ViewBag.IsEditMode;
	var apiList = await DbContext.ApiResources.ToArrayAsync();
	var apiSelectList = new SelectList(apiList, nameof(AppApiResource.Id), nameof(AppApiResource.DisplayName));
}

<div class="card">
	<div class="card-header">主要信息</div>
	<div class="card-body">
		<div class="form-group">
			<label asp-for="Id" class="form-control-label"></label>
			<input asp-for="Id" class="form-control" readonly="@isEditMode" />
			<span asp-validation-for="Id" class="text-danger"></span>
			<small class="form-text text-muted">领域的标识，将会作为请求的一部分出现在请求的 URL 中。该属性在领域创建后将不可更改。</small>
		</div>
		<div class="form-group">
			<label asp-for="DisplayName" class="form-control-label"></label>
			<input asp-for="DisplayName" class="form-control" />
			<span asp-validation-for="DisplayName" class="text-danger"></span>
			<small class="form-text text-muted">领域的显示名称。将会显示在用户许可和应用设定的界面。</small>
		</div>
		<div class="form-group">
			<label asp-for="Description" class="form-control-label"></label>
			<textarea asp-for="Description" class="form-control" rows="3"></textarea>
			<span asp-validation-for="Description" class="text-danger"></span>
			<small class="form-text text-muted">领域的描述。将会显示在用户许可和应用设定的界面。</small>
		</div>

		<div class="form-group">
			<label asp-for="Type" class="form-control-label"></label>
			<select asp-enum-for="Type" asp-text-source="Name" class="form-control" rows="3"></select>
			<span asp-validation-for="Type" class="text-danger"></span>
			<small class="form-text text-muted">领域的类型。资源领域用于表示一个或者多个用户信息（标识资源）。资源领域表示对特定 API 资源（调用）的访问权限。资源领域必须关联到一个或多个 API 资源。</small>
		</div>

		<div class="form-group">
			<label asp-for="ApiId" class="form-control-label"></label>
			<select asp-for="ApiId" asp-items="@apiSelectList" asp-option-label="不关联到任何 API" class="form-control"></select>
			<span asp-validation-for="ApiId" class="text-danger"></span>
			<small class="form-text text-muted">领域关联到的 API 资源对象。该选项仅对资源领域有效。</small>
		</div>

		<div class="form-check">
			<label class="form-check-label">
				<input asp-for="IsHidden" class="form-check-input" /> 隐藏该领域
			</label>
			<small class="form-text text-muted">如果隐藏该领域，则用户将无法在领域表中看到该项目。隐藏的领域通常用于内部操作。</small>
		</div>
		
		<div class="form-check">
			<label class="form-check-label">
				<input asp-for="IsRequired" class="form-check-input" /> 该领域是必需的
			</label>
			<small class="form-text text-muted">选中该复选框后，用户在确认界面必须同意授权该领域，无法取消选择对应的复选框。</small>
		</div>
		
		<div class="form-check">
			<label class="form-check-label">
				<input asp-for="IsImportant" class="form-check-input" /> 该领域是重要的
			</label>
			<small class="form-text text-muted">选中该复选框后，该领域在用户确认界面将使用特别的文字进行提示，提醒用户要谨慎授权。</small>
		</div>
	</div>
</div>

<div class="card mt-3">
	<div class="card-header">用户声明</div>
	<div class="card-body">
		<p class="card-text">下表列出了该用户领域需要使用的用户声明信息。</p>
		<hr />
		<vc:user-claims-selector selected-items="@Model?.UserClaims" input-name="@nameof(Model.UserClaims)" />
	</div>
</div>