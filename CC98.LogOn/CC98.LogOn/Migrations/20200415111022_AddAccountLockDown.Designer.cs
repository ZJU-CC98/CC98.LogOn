// <auto-generated />
using System;
using CC98.LogOn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CC98.LogOn.Migrations
{
    [DbContext(typeof(CC98IdentityDbContext))]
    [Migration("20200415111022_AddAccountLockDown")]
    partial class AddAccountLockDown
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CC98.LogOn.Data.CC98User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Gender")
                        .HasColumnName("Sex")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerified")
                        .HasColumnName("Verified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogOnTime")
                        .HasColumnName("lastlogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("LogOnCount")
                        .HasColumnName("logins")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnName("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortraitUri")
                        .HasColumnName("face")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCount")
                        .HasColumnName("article")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnName("adddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisterZjuInfoId")
                        .HasColumnName("RegMail")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CC98.LogOn.Data.UserTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserTitles");
                });

            modelBuilder.Entity("CC98.LogOn.Data.ZjuAccountLockDownRecord", b =>
                {
                    b.Property<string>("ZjuAccountId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ZjuAccountId");

                    b.ToTable("ZjuAccountLockDownRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
